---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: authentikdb
  namespace: authentik
spec:
  instances: 1
  imageName: ghcr.io/cloudnative-pg/postgresql:14.8-6
  inheritedMetadata:
    labels:
      kube-image-keeper.enix.io/image-caching-policy: ignore
  primaryUpdateStrategy: unsupervised
  storage:
    size: 1Gi
    storageClass: longhorn
  # superuserSecret:
  #   name: cloudnative-pg-secret
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  backup:
    retentionPolicy: 30d
    barmanObjectStore:
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg-backup/authentik
      endpointURL: https://s3.${SECRET_DOMAIN}
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg-secret
          key: minio-access-key-id
        secretAccessKey:
          name: cloudnative-pg-secret
          key: minio-secret-access-key

  # bootstrap:
  #   initdb:
  #     import:
  #       type: microservice
  #       databases:
  #         - authentik
  #       source:
  #         externalCluster: authentik-postgresql

  # externalClusters:
  #   - name: authentik-postgresql
  #     connectionParameters:
  #       # Use the correct IP or host name for the source database
  #       host: authentik-postgresql.networking.svc.cluster.local
  #       user: authentik
  #       dbname: postgres
  #     password:
  #       name: authentik-postgresql
  #       key: postgresql-password
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: authentik-backup
spec:
  schedule: "0 21 * * *"
  backupOwnerReference: self
  cluster:
    name: pg-backup