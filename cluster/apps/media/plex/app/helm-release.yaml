---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # dependsOn:
  #   - name: intel-device-plugin-gpu
  #     namespace: kube-system
  #   - name: rook-ceph-cluster
  #     namespace: rook-ceph
  #   - name: volsync
  #     namespace: volsync
  values:
    controllers:
      main:
        # annotations:
        #   reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.32.7.7621-871adbd44@sha256:f9f77dc5e17cab9fae5ece663a64d026e3c75142b3b60bb4a52bf061957412be
            env:
              TZ: America/New_York
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                #gpu.intel.com/i915: 1
                cpu: 200m
                memory: 2Gi
              limits:
                #gpu.intel.com/i915: 1
                memory: 12Gi
        pod:
          affinity:
            # podAntiAffinity:
            #   requiredDuringSchedulingIgnoredDuringExecution:
            #     - labelSelector:
            #         matchExpressions:
            #           - key: app.kubernetes.io/name
            #             operator: In
            #             values: ["frigate"]
            #       topologyKey: kubernetes.io/hostname
          # nodeSelector:
          #   intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 2316
            runAsGroup: 2316
            # fsGroup: 
            # fsGroupChangePolicy: OnRootMismatch
            # supplementalGroups: [44, 105, 10000]
    service:
      main:
        type: LoadBalancer
        loadBalancerIP: "${PLEX_SVC_IP}"
        ports:
          http:
            port: 32400
    ingress:
      main:
        strategy: Recreate
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          hajimari.io/icon: "plex"
          hajimari.io/group: "media"
        hosts:
          - host: &host "plex.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: longhorn-plex-pvc-static
      transcode:
        enabled: true
        existingClaim: nfs-nebula-video-transcode-pvc
        mountpath: /transcode
      music:
        enabled: true
        existingClaim: nfs-nebula-music-pvc
        mountPath: /music
        readOnly: true
      video:
        enabled: true
        existingClaim: nfs-nebula-video-pvc
        mountPath: /video
        readOnly: false
      audiobooks:
        enabled: true
        existingClaim: nfs-nebula-plex-audiobooks-pvc
        mountPath: /audiobooks
        readOnly: true
     # try this instead of using manual pvcs
         #   media:
    #     type: nfs
    #     server: expanse.turbo.ac
    #     path: /eros/Media
    #     globalMounts:
    #       - path: /media
    #         readOnly: true