---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: paperless
      version: 9.1.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 1.7.1
      pullPolicy: IfNotPresent
    env:
      USERMAP_UID: 2316
      USERMAP_GID: 2316
      PAPERLESS_CONSUMER_POLLING: 30
      PAPERLESS_REDIS: "redis://default:${SECRET_PAPERLESS_REDIS_PASSWORD}@paperless-redis-master:6379"
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: "TRUE"
      PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: "HTTP_X_AUTHENTIK_USERNAME"
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          # https://goauthentik.io/docs/providers/proxy/forward_auth
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-authentik-embedded-outpost.networking.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://paperless.${SECRET_DOMAIN}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: "paperless.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "paperless.${SECRET_DOMAIN}"
    persistence:
      data:
        enabled: true
        existingClaim: nfs-nebula-paperless-data-pvc
        mountPath: /usr/src/paperless/data
      media:
        enabled: true
        existingClaim: nfs-nebula-paperless-media-pvc
        mountPath: /usr/src/paperless/media
      consume:
        enabled: true
        existingClaim: nfs-nebula-paperless-consume-pvc
        mountPath: /usr/src/paperless/consume
      export:
        enabled: true
        existingClaim: nfs-nebula-paperless-export-pvc
        mountPath: /usr/src/paperless/export
    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: true
        password: "${SECRET_PAPERLESS_REDIS_PASSWORD}"
        usePasswordFiles: false
